-- Calculate average salary per industry and year, and add previous year's value to compute the growth
WITH salary_data AS (
    SELECT 
        cpib.name AS industry_name,
        cp.payroll_year,
        AVG(cp.value) AS avg_salary
    FROM czechia_payroll AS cp
    LEFT JOIN czechia_payroll_industry_branch AS cpib 
        ON cpib.code = cp.industry_branch_code
    GROUP BY cpib.name, cp.payroll_year
),
salary_trends AS (
    SELECT 
        industry_name,
        payroll_year,
        avg_salary,
        LAG(avg_salary) OVER (PARTITION BY industry_name ORDER BY payroll_year) AS prev_year_salary
    FROM salary_data
)
SELECT 
    *,
    ROUND((avg_salary - prev_year_salary) / NULLIF(prev_year_salary, 0) * 100, 2) AS salary_change_perc
FROM salary_trends
ORDER BY industry_name, payroll_year;


-- Compute average year-over-year salary growth across all industries
WITH salary_data AS (
    SELECT 
        cpib.name AS industry_name,
        cp.payroll_year,
        AVG(cp.value) AS avg_salary
    FROM czechia_payroll AS cp
    LEFT JOIN czechia_payroll_industry_branch AS cpib 
        ON cpib.code = cp.industry_branch_code
    GROUP BY cpib.name, cp.payroll_year
),
salary_trends AS (
    SELECT 
        industry_name,
        payroll_year,
        avg_salary,
        LAG(avg_salary) OVER (PARTITION BY industry_name ORDER BY payroll_year) AS prev_year_salary
    FROM salary_data
),
salary_growth AS (
    SELECT 
        payroll_year AS year,
        AVG(ROUND((avg_salary - prev_year_salary) / NULLIF(prev_year_salary, 0) * 100, 2)) AS avg_salary_growth
    FROM salary_trends
    GROUP BY payroll_year
)
SELECT * FROM salary_growth ORDER BY year;

-- Calculate average price per food category per year and percentage change from previous year
WITH price_avg AS (
    SELECT 
        EXTRACT(YEAR FROM czprice.date_to) AS year,
        cpc.name AS category_name,
        AVG(czprice.value) AS avg_price
    FROM czechia_price AS czprice
    JOIN czechia_price_category AS cpc ON cpc.code = czprice.category_code
    GROUP BY year, cpc.name
),
price_change AS (
    SELECT 
        year,
        category_name,
        avg_price,
        LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year) AS prev_price,
        ROUND(((avg_price - LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year)) 
              / NULLIF(LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year), 0) * 100)::NUMERIC, 2) AS price_change_perc
    FROM price_avg
)
SELECT * FROM price_change ORDER BY category_name, year;


-- Identify the food category with the slowest average annual price increase
WITH price_avg AS (
    SELECT 
        EXTRACT(YEAR FROM czprice.date_to) AS year,
        cpc.name AS category_name,
        AVG(czprice.value) AS avg_price
    FROM czechia_price AS czprice
    JOIN czechia_price_category AS cpc ON cpc.code = czprice.category_code
    GROUP BY year, cpc.name
),
price_change AS (
    SELECT 
        year,
        category_name,
        avg_price,
        LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year) AS prev_price,
        ROUND(((avg_price - LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year)) 
              / NULLIF(LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year), 0) * 100)::NUMERIC, 2) AS price_change_perc
    FROM price_avg
),
min_grow_by_category AS ( 
    SELECT
        category_name AS slowest_rising_category,
        AVG(price_change_perc)::NUMERIC AS slowest_growth_rate  
    FROM price_change
    WHERE price_change_perc IS NOT NULL
    GROUP BY category_name
    ORDER BY slowest_growth_rate ASC
    LIMIT 1
)
SELECT * FROM min_grow_by_category;




-- Compare salary growth vs price growth and return years with significant inflation pressure
WITH salary_data AS (
    SELECT 
        cpib.name AS industry_name,
        cp.payroll_year,
        AVG(cp.value) AS avg_salary
    FROM czechia_payroll AS cp
    LEFT JOIN czechia_payroll_industry_branch AS cpib 
        ON cpib.code = cp.industry_branch_code
    GROUP BY cpib.name, cp.payroll_year
),
salary_trends AS (
    SELECT 
        industry_name,
        payroll_year,
        avg_salary,
        LAG(avg_salary) OVER (PARTITION BY industry_name ORDER BY payroll_year) AS prev_year_salary
    FROM salary_data
),
salary_growth AS (
    SELECT 
        payroll_year AS year,
        AVG(ROUND((avg_salary - prev_year_salary) / NULLIF(prev_year_salary, 0) * 100, 2)) AS avg_salary_growth
    FROM salary_trends
    GROUP BY payroll_year
),
price_avg AS (
    SELECT 
        EXTRACT(YEAR FROM czprice.date_to) AS year,
        cpc.name AS category_name,
        AVG(czprice.value) AS avg_price
    FROM czechia_price AS czprice
    JOIN czechia_price_category AS cpc ON cpc.code = czprice.category_code
    GROUP BY year, cpc.name
),
price_change AS (
    SELECT 
        year,
        category_name,
        avg_price,
        LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year) AS prev_price,
        ROUND(((avg_price - LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year)) 
              / NULLIF(LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year), 0) * 100)::NUMERIC, 2) AS price_change_perc
    FROM price_avg
),
price_growth AS (
    SELECT 
        year,
        AVG(price_change_perc) AS avg_price_growth
    FROM price_change
    WHERE price_change_perc IS NOT NULL
    GROUP BY year
),
salary_vs_price_growth AS (
    SELECT 
        pg.year,
        pg.avg_price_growth,
        sg.avg_salary_growth,
        (pg.avg_price_growth - sg.avg_salary_growth) AS growth_difference
    FROM price_growth pg
    JOIN salary_growth sg ON pg.year = sg.year
    WHERE (pg.avg_price_growth - sg.avg_salary_growth) > 10
)
SELECT * FROM salary_vs_price_growth ORDER BY growth_difference DESC;






