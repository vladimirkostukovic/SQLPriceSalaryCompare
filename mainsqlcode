create table t_vladimir_kostukovic_project_SQL_primary_final as
WITH salary_data AS (
    -- Calculate the average salary for each year and industry
    SELECT 
        cpib.name AS industry_name,
        cp.payroll_year,
        AVG(cp.value) AS avg_salary
    FROM czechia_payroll AS cp
    LEFT JOIN czechia_payroll_industry_branch AS cpib 
        ON cpib.code = cp.industry_branch_code
    GROUP BY cpib.name, cp.payroll_year
),

salary_trends AS (
    -- Add the previous year's salary
    SELECT 
        industry_name,
        payroll_year,
        avg_salary,
        LAG(avg_salary) OVER (PARTITION BY industry_name ORDER BY payroll_year) AS prev_year_salary
    FROM salary_data
),

salary_growth AS (
    -- Average percentage salary growth per year
    SELECT 
        payroll_year AS year,
        AVG(ROUND((avg_salary - prev_year_salary) / NULLIF(prev_year_salary, 0) * 100, 2)) AS avg_salary_growth
    FROM salary_trends
    GROUP BY payroll_year
),

price_years AS (
    -- Find the first and last year in the price table
    SELECT 
        MIN(EXTRACT(YEAR FROM date_from)) AS first_year,
        MAX(EXTRACT(YEAR FROM date_to)) AS last_year
    FROM czechia_price
),

price_avg AS (
    -- Calculate the average price of food categories for each year
    SELECT 
        EXTRACT(YEAR FROM czprice.date_to) AS year,
        cpc.name AS category_name,
        AVG(czprice.value) AS avg_price
    FROM czechia_price AS czprice
    JOIN czechia_price_category AS cpc ON cpc.code = czprice.category_code
    GROUP BY year, cpc.name
),

price_change AS (
    -- Calculate year-over-year percentage price change for each category
    SELECT 
        year,
        category_name,
        avg_price,
        LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year) AS prev_price,
        ROUND(((avg_price - LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year)) 
              / NULLIF(LAG(avg_price) OVER (PARTITION BY category_name ORDER BY year), 0) * 100)::NUMERIC, 2) AS price_change_perc
    FROM price_avg
),

min_grow_by_category AS ( 
    -- Find the category with the slowest average annual price growth
    SELECT
        category_name AS slowest_rising_category,
        AVG(price_change_perc)::NUMERIC AS slowest_growth_rate  
    FROM price_change
    WHERE price_change_perc IS NOT NULL
    GROUP BY category_name
    ORDER BY slowest_growth_rate ASC
    LIMIT 1
),

price_growth AS (
    -- Calculate overall price growth (average of all categories) per year
    SELECT 
        year,
        AVG(price_change_perc) AS avg_price_growth
    FROM price_change
    WHERE price_change_perc IS NOT NULL
    GROUP BY year
),

salary_vs_price_growth AS (
    -- Find years where price growth was at least 10% higher than salary growth
    SELECT 
        pg.year,
        pg.avg_price_growth,
        sg.avg_salary_growth,
        (pg.avg_price_growth - sg.avg_salary_growth) AS growth_difference
    FROM price_growth pg
    JOIN salary_growth sg ON pg.year = sg.year
    WHERE (pg.avg_price_growth - sg.avg_salary_growth) > 10
    ORDER BY growth_difference DESC
)

SELECT 
    st.industry_name,
    st.payroll_year,
    st.prev_year_salary,
    st.avg_salary,

    -- Percentage change in salary from the previous year
    ROUND(CAST((st.avg_salary - st.prev_year_salary) / NULLIF(st.prev_year_salary, 0) * 100 AS numeric(10,2)), 2) AS salary_change_perc,
    
    -- Average price growth per year
    pg.avg_price_growth,

    -- Year-over-year inflation (when price growth exceeded salary growth by 10%)
    svg.year AS inflation_year,
    svg.avg_price_growth AS inflation_price_growth,
    svg.avg_salary_growth AS inflation_salary_growth,
    svg.growth_difference AS inflation_diff,

    -- Category with the slowest price growth
    mgc.slowest_rising_category,
    mgc.slowest_growth_rate

FROM salary_trends st
LEFT JOIN price_growth pg ON st.payroll_year = pg.year
LEFT JOIN salary_vs_price_growth svg ON st.payroll_year = svg.year
LEFT JOIN min_grow_by_category mgc ON TRUE
ORDER BY st.industry_name, st.payroll_year;
